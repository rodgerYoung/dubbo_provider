#spring.dubbo.application.name=provider
#spring.dubbo.registry.address=zookeeper://192.168.8.11:2181
##固定名称
#spring.dubbo.protocol.name=dubbo
#spring.dubbo.protocol.port=20880
#spring.dubbo.monitor.protocol=registry
#spring.dubbo.scan=com.example.demo

# jdbc_config
spring.datasource.url=jdbc:mysql://192.168.8.13:3306/test?characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=mysql
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
# mybatis_config
mybatis.mapper-locations=classpath:xml/*.xml
mybatis.typeAliasesPackage=com.example.demo.entity

#日志文件
logging.file=../logs/provider.log
logging.level.root=INFO
logging.level.org.springframework.web=INFO

#上传文件大小
spring.http.multipart.max-file-size=500MB
spring.http.multipart.max-request-size=2000MB

spring.thymeleaf.cache=false
